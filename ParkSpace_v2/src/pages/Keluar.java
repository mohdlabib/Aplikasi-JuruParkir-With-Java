/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pages;

import com.formdev.flatlaf.FlatClientProperties;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;
import parkspace_v2.Func;
import parkspace_v2.Koneksi;
import parkspace_v2.PanelSwitcher;

/**
 *
 * @author cyber
 */
public class Keluar extends javax.swing.JPanel {
    private PanelSwitcher panelSwitcher = null;

    /**
     * Creates new form Keluar
     * @param panelSwitcher
     */
    public Keluar(PanelSwitcher panelSwitcher) {
        this.panelSwitcher = panelSwitcher;
        initComponents();
        
        init();
        
        Font fontPoppins4 = new Font("Poppins", Font.PLAIN, 12);
        jLabel3.setFont(fontPoppins4);
        jLabel4.setFont(fontPoppins4);
        jLabel8.setFont(fontPoppins4);
        jLabel5.setFont(fontPoppins4);
        jLabel6.setFont(fontPoppins4);
        Masuk.setFont(fontPoppins4);
        jLabel2.setFont(fontPoppins4);
        
        Font fontPoppins7 = new Font("Poppins", Font.BOLD, 12);
        Font fontPoppins8 = new Font("Poppins", Font.BOLD, 18);
        jLabel1.setFont(fontPoppins7);
        jLabel7.setFont(fontPoppins8);
    }
    
    public static void setId() throws SQLException {
            BmInput.setText("");
            jLabel3.setText("Plat Nomor : ");
            jLabel4.setText("Kendaraan : ");
            jLabel8.setText("Jam Masuk : ");
            jLabel6.setText("Jam Keluar : ");
            jLabel7.setText("Rp. 0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound2 = new panel.PanelRound();
        BmInput = new javax.swing.JTextField();
        Masuk = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        panelRound1 = new panel.PanelRound();
        jLabel2 = new javax.swing.JLabel();
        fotoP = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        panelRound3 = new panel.PanelRound();
        panelRound4 = new panel.PanelRound();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.setBackground(new java.awt.Color(246, 127, 6));
        panelRound2.setRoundBottomLeft(16);
        panelRound2.setRoundBottomRight(16);
        panelRound2.setRoundTopLeft(16);
        panelRound2.setRoundTopRight(16);
        panelRound2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        panelRound2.add(BmInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 42, 287, 42));

        Masuk.setText("Keluar");
        Masuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MasukActionPerformed(evt);
            }
        });
        panelRound2.add(Masuk, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 116, 103, 30));

        add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 452, 157));

        jPanel1.setBackground(new java.awt.Color(255, 146, 35));
        jPanel1.setMinimumSize(new java.awt.Dimension(980, 60));
        jPanel1.setPreferredSize(new java.awt.Dimension(986, 60));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound1.setRoundBottomLeft(15);
        panelRound1.setRoundBottomRight(15);
        panelRound1.setRoundTopLeft(15);
        panelRound1.setRoundTopRight(15);

        jLabel2.setText("Udin");

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fotoP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fotoP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, 120, 50));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/back.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 72, 40, 30));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 150));

        panelRound3.setRoundBottomLeft(16);
        panelRound3.setRoundBottomRight(16);
        panelRound3.setRoundTopLeft(16);
        panelRound3.setRoundTopRight(16);
        panelRound3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Rp. 0");

        javax.swing.GroupLayout panelRound4Layout = new javax.swing.GroupLayout(panelRound4);
        panelRound4.setLayout(panelRound4Layout);
        panelRound4Layout.setHorizontalGroup(
            panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        panelRound4Layout.setVerticalGroup(
            panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel7)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        panelRound3.add(panelRound4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 180, 80));

        jLabel1.setText("Info Kendaraan");
        panelRound3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));

        jLabel3.setText("Plat Nomor : ");
        panelRound3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jLabel4.setText("Kendaraan :");
        panelRound3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel5.setText("Harga");
        panelRound3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, -1, -1));

        jLabel8.setText("Jam Masuk :");
        panelRound3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jLabel6.setText("Jam Keluar :");
        panelRound3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        add(panelRound3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 450, 160));
    }// </editor-fold>//GEN-END:initComponents

    private void MasukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MasukActionPerformed
        try {
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();

            String bm = BmInput.getText();
            String sqlCheck = "SELECT * FROM parkir WHERE bm = '" + bm + "' AND status = 1";
            ResultSet rs = s.executeQuery(sqlCheck);

            if (rs.next()) {
                int idParkir = rs.getInt("id"); 
                int idSpace = rs.getInt("space"); 
                String IdtypeVehicle = rs.getString("IdVehicle"); 
                
                // isi ketenrangan
                jLabel3.setText("Plat Nomor : " + rs.getString("bm"));
                jLabel8.setText("Jam Masuk : " + rs.getString("time"));
                jLabel6.setText("Jam Keluar : " + getCurrentTime());
                
                String idVehicle = rs.getString("IdVehicle");
                double hargaPerJam = getHargaPerJamByIdVehicle(idVehicle);
                
                jLabel4.setText("Kendaraan : " + getStatusByIdVehicle(idVehicle));
                
                double totalHarga = hitungTotalHarga(rs.getString("time"), getCurrentTime(), hargaPerJam);
                jLabel7.setText("Rp." + totalHarga);
                
                String apiUrl = "http://23.95.48.230:4060/send-img";
                String session = "tokebot";
                
                String text = "*Kang Parkir* - Kendaraan dengan plat nomor *" + rs.getString("bm") + "* telah keluar."
                    + " Jam Masuk: *" + rs.getString("time") + "*."
                    + " Jam Keluar: *" + getCurrentTime() + "*."
                    + " Total Biaya Parkir: *" + totalHarga + "* (Biaya per Jam: *" + hargaPerJam + "*)."
                    + " Terima kasih telah menggunakan *Kang Parkir!*";


                String whatsappUrl = apiUrl + "?session=" + session + "&to=" + rs.getString("noWa") + "&text=" + text + "&media=https://labibweb.my.id/appsLb/tiket.jpg";
                OkHttpClient client = new OkHttpClient();
                Request request = new Request.Builder().url(whatsappUrl).get().build();
                client.newCall(request).execute();

                String sqlUpdateParkir = "UPDATE parkir SET status = 2, space = '0' WHERE id = " + idParkir;
                s.executeUpdate(sqlUpdateParkir);

                String sqlUpdateSpace = "UPDATE space SET status = 0 WHERE noParkir = " + idSpace + " AND type = '" + IdtypeVehicle + "' ";
                s.executeUpdate(sqlUpdateSpace);
                
                JOptionPane.showMessageDialog(null, "Kendaraan keluar. Total Harga : " + totalHarga);
            } else {
                JOptionPane.showMessageDialog(null, "Kendaraan tidak terparkir.");
            }

            BmInput.setText("");
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (IOException ex) {
            Logger.getLogger(Keluar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MasukActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        panelSwitcher.switchToPanel("dashboard");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void init() {
        BmInput.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "BM 2012");
        
        Font fontPoppins4 = new Font("Poppins", Font.PLAIN, 12);
        jLabel2.setFont(fontPoppins4);
        
        Font fontPoppins45 = new Font("Poppins", Font.BOLD, 12);
        jLabel1.setFont(fontPoppins45);
    }
    
    private double getHargaPerJamByIdVehicle(String idVehicle) throws SQLException {
        Connection c = Koneksi.getKoneksi();
        Statement s = c.createStatement();
        String sqlGetHarga = "SELECT harga FROM vehicle WHERE id = '" + idVehicle + "'";
        ResultSet rs = s.executeQuery(sqlGetHarga);

        if (rs.next()) {
            return rs.getDouble("harga");
        } else {
            return 0.0;
        }
    }
    
    private String getStatusByIdVehicle(String idVehicle) throws SQLException {
        Connection c = Koneksi.getKoneksi();
        Statement s = c.createStatement();
        String sqlGetHarga = "SELECT nama FROM vehicle WHERE id = '" + idVehicle + "'";
        ResultSet rs = s.executeQuery(sqlGetHarga);

        if (rs.next()) {
            return rs.getString("nama");
        } else {
            return "-";
        }
    }
    
    private String getCurrentTime() {
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        return format.format(new Date());
    }

    private double hitungTotalHarga(String jamMasuk, String jamKeluar, double hargaPerJam) {
        try {
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            Date dateJamMasuk = format.parse(jamMasuk);
            Date dateJamKeluar = format.parse(jamKeluar);

            long selisihMillis = dateJamKeluar.getTime() - dateJamMasuk.getTime();
            int selisihJam = (int) TimeUnit.MILLISECONDS.toHours(selisihMillis);

            double totalHarga;
            if (selisihJam <= 1) {
                totalHarga = hargaPerJam;
            } else {
                // Tarif normal untuk jam berikutnya
                totalHarga = hargaPerJam + (selisihJam - 1) * hargaPerJam;
            }

            return totalHarga;
        } catch (ParseException e) {
            e.printStackTrace();
            return 0.0;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextField BmInput;
    private javax.swing.JButton Masuk;
    public static javax.swing.JLabel fotoP;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel2;
    public static javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel jLabel4;
    public static javax.swing.JLabel jLabel5;
    public static javax.swing.JLabel jLabel6;
    public static javax.swing.JLabel jLabel7;
    public static javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private panel.PanelRound panelRound1;
    private panel.PanelRound panelRound2;
    private panel.PanelRound panelRound3;
    private panel.PanelRound panelRound4;
    // End of variables declaration//GEN-END:variables
}
