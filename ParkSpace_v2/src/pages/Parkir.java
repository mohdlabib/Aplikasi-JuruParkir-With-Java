/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pages;

import com.formdev.flatlaf.FlatClientProperties;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import parkspace_v2.Func;
import parkspace_v2.Koneksi;
import parkspace_v2.PanelSwitcher;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

/**
 *
 * @author cyber
 */
public class Parkir extends javax.swing.JPanel {
    private PanelSwitcher panelSwitcher = null;

    /**
     * Creates new form Parkir
     * @param panelSwitcher
     * @throws java.sql.SQLException
     */
    public Parkir(PanelSwitcher panelSwitcher) throws SQLException {
        this.panelSwitcher = panelSwitcher;
        initComponents();
        
        Font fontPoppins4 = new Font("Poppins", Font.PLAIN, 12);
        jLabel2.setFont(fontPoppins4);
        
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound2 = new panel.PanelRound();
        dropdownCar = new javax.swing.JComboBox<>();
        inputBm = new javax.swing.JTextField();
        inputNowa = new javax.swing.JTextField();
        Masuk = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        panelRound1 = new panel.PanelRound();
        jLabel2 = new javax.swing.JLabel();
        fotoP = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(986, 524));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.setBackground(new java.awt.Color(246, 127, 6));
        panelRound2.setRoundBottomLeft(16);
        panelRound2.setRoundBottomRight(16);
        panelRound2.setRoundTopLeft(16);
        panelRound2.setRoundTopRight(16);

        dropdownCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropdownCarActionPerformed(evt);
            }
        });

        Masuk.setText("Masuk");
        Masuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MasukActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputBm, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropdownCar, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputNowa, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelRound2Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(Masuk, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(dropdownCar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(inputNowa, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(inputBm, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Masuk, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 440, 280));

        jPanel1.setBackground(new java.awt.Color(255, 146, 35));
        jPanel1.setPreferredSize(new java.awt.Dimension(980, 181));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound1.setRoundBottomLeft(15);
        panelRound1.setRoundBottomRight(15);
        panelRound1.setRoundTopLeft(15);
        panelRound1.setRoundTopRight(15);

        jLabel2.setText("Udin");

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fotoP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fotoP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, 120, 50));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/back.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 72, 40, 30));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 150));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        panelSwitcher.switchToPanel("dashboard");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dropdownCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropdownCarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dropdownCarActionPerformed

    private void MasukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MasukActionPerformed
        try {
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            String userId = Func.getData();

            String bm = inputBm.getText();
            String sqlCheck = "SELECT * FROM parkir WHERE bm = '" + bm + "' AND status = 1";
            ResultSet rs = s.executeQuery(sqlCheck);
                        
            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "Kendaraan telah terparkir.");
            } else {
                String selectedVehicleName = dropdownCar.getSelectedItem().toString();
                String sqlGetTypeVehicle = "SELECT id FROM vehicle WHERE nama = '" + selectedVehicleName + "'";
                ResultSet typeResult = s.executeQuery(sqlGetTypeVehicle);
                int IdtypeVehicle = 0;

                if (typeResult.next()) {
                    IdtypeVehicle = typeResult.getInt("id");
                }
            
                // Mengecek apakah ada parkiran kosong
                String sqlCheckSpace = "SELECT * FROM space WHERE status = 0 AND type = "+ IdtypeVehicle +" ";
                ResultSet spaceResult = s.executeQuery(sqlCheckSpace);

                if (spaceResult.next()) {
                    // Jika ada parkiran kosong, ambil nomor parkir secara acak
                    String noParkirKosong = getRandomEmptyParkingSpace();
                    if (!noParkirKosong.isEmpty()) {
                        String sqlInsert = "INSERT INTO `parkir`(`bm`, `IdVehicle`, `noWa`, `time`, `status`, `space`, `adminId`, `timeOut`) VALUES ('" + bm + "','"
                        + IdtypeVehicle + "','" + inputNowa.getText() + "','" + getCurrentDateTime() + "', 1, '" + noParkirKosong + "', '"+userId+"', '-')";

                        int rowsInserted = s.executeUpdate(sqlInsert);

                        if (rowsInserted > 0) {
                            // Update status parkiran menjadi terisi (status = 1) di tabel space
                            String sqlUpdateSpace = "UPDATE space SET status = 1 WHERE noParkir = '" + noParkirKosong + "' AND type = '" + IdtypeVehicle + "' ";
                            s.executeUpdate(sqlUpdateSpace);
                            
                            String apiUrl = "http://23.95.48.230:4060/send-img";
                            String session = "";
                            String text = "*Kang Parkir* - Ini tiket Anda dengan plat nomor *" + bm + "*. Silakan parkir di nomor *" + noParkirKosong + "*. Terima kasih telah menggunakan *Kang Parkir!*";

                            String whatsappUrl = apiUrl + "?session=" + session + "&to=" + inputNowa.getText() + "&text=" + text + "&media=https://labibweb.my.id/appsLb/tiket.jpg";
                            OkHttpClient client = new OkHttpClient();
                            Request request = new Request.Builder().url(whatsappUrl).get().build();
                            Response response = client.newCall(request).execute();

                            if (response.isSuccessful()) {
                                JOptionPane.showMessageDialog(null, "Data kendaraan berhasil disimpan.");
                            } else {
                                JOptionPane.showMessageDialog(null, "Gagal mengirim pesan WhatsApp.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Data kendaraan gagal disimpan");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Tidak ada parkiran kosong yang tersedia.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Tidak ada parkiran kosong yang tersedia.");
                }
            }

            inputBm.setText("");
            dropdownCar.setSelectedIndex(0);
            inputNowa.setText("");
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (IOException ex) {
            Logger.getLogger(Parkir.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MasukActionPerformed

    private String getCurrentDateTime() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date currentDate = new Date();
        return dateFormat.format(currentDate);
    }
    
    private String getRandomEmptyParkingSpace() {
        try {
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();

            String sqlCheckSpace = "SELECT * FROM space WHERE status = 0";
            ResultSet spaceResult = s.executeQuery(sqlCheckSpace);

            if (spaceResult.next()) {
                String emptyParkingSpaces = spaceResult.getString("noParkir");

                String[] emptyParkingArray = emptyParkingSpaces.split(",");

                Random random = new Random();
                int randomIndex = random.nextInt(emptyParkingArray.length);
                return emptyParkingArray[randomIndex];
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return ""; // Mengembalikan string kosong jika tidak ada parkiran kosong yang tersedia
    }
    
    public static void addModelComboBox(){
        try {
            Connection conn = Koneksi.getKoneksi();
            Statement stmt = conn.createStatement();
            String sql = "SELECT * FROM vehicle";
            ResultSet rs = stmt.executeQuery(sql);

            dropdownCar.removeAllItems();
            
            while (rs.next()) {
                int id = rs.getInt("id");
                String name = rs.getString("nama");
                
                dropdownCar.addItem(name);
            }
            
            rs.close();
            stmt.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void init() {
        inputNowa.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "masukan no wa.");
        inputBm.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "masukan plat nomor.");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Masuk;
    public static javax.swing.JComboBox<String> dropdownCar;
    public static javax.swing.JLabel fotoP;
    private javax.swing.JTextField inputBm;
    private javax.swing.JTextField inputNowa;
    private javax.swing.JButton jButton1;
    public static javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private panel.PanelRound panelRound1;
    private panel.PanelRound panelRound2;
    // End of variables declaration//GEN-END:variables
}
