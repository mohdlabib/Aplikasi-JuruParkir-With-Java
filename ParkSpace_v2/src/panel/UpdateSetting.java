/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package panel;

import com.formdev.flatlaf.FlatClientProperties;
import java.awt.Component;
import java.awt.Window;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import pages.Setting;
import static parkspace_v2.Func.stringToInt;
import parkspace_v2.Koneksi;

/**
 *
 * @author cyber
 */
public class UpdateSetting extends javax.swing.JFrame {
    private int id;


    /**
     * Creates new form AddSetting
     */
    public UpdateSetting(int id) {
        this.id = id;
        initComponents();
        fieldUpdate();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        namaV = new javax.swing.JTextField();
        hargaV = new javax.swing.JTextField();
        slotV = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
        jPanel1.add(namaV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 350, 40));
        jPanel1.add(hargaV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 350, 40));
        jPanel1.add(slotV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 350, 40));

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 120, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Connection c = null; 
        String pesan = "";
        try {
            c = Koneksi.getKoneksi();
            c.setAutoCommit(false); // Matikan otomatis komit

            // Mendapatkan nilai slot yang baru
            int jumlahSlotBaru = stringToInt(slotV.getText());

            // Perbarui data di tabel 'vehicle'
            String updateVehicleSQL = "UPDATE vehicle SET nama = ?, harga = ?, slot = ? WHERE id = ?";
            PreparedStatement preparedStatement = c.prepareStatement(updateVehicleSQL);
            preparedStatement.setString(1, namaV.getText());
            preparedStatement.setInt(2, stringToInt(hargaV.getText()));
            preparedStatement.setInt(3, jumlahSlotBaru);
            preparedStatement.setInt(4, id);
            int result = preparedStatement.executeUpdate();

            if (result > 0) {
                String updateSpaceSQL = "INSERT INTO space (type, noParkir, status) VALUES (?, ?, ?)";
                PreparedStatement spaceStatement = c.prepareStatement(updateSpaceSQL);
                spaceStatement.setInt(1, id);

                String deleteSpaceSQL = "DELETE FROM space WHERE type = ?";
                PreparedStatement deleteStatement = c.prepareStatement(deleteSpaceSQL);
                deleteStatement.setInt(1, id);

                deleteStatement.executeUpdate();

                for (int i = 1; i <= jumlahSlotBaru; i++) {
                    spaceStatement.setInt(2, i);
                    spaceStatement.setInt(3, 0);
                    spaceStatement.executeUpdate();
                }

                c.commit();
                pesan = "berhasil";
            } else {
                c.rollback();
                pesan = "gagal";
            }
        } catch (SQLException e) {
            e.printStackTrace();
            try {
                if (c != null) {
                    c.rollback(); 
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } finally {
            try {
                if (c != null) {
                    c.setAutoCommit(true);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

        Window window = SwingUtilities.getWindowAncestor((Component) evt.getSource());
        if (window instanceof JFrame) {
            ((JFrame) window).dispose();
        }

        try {
            Setting.table(null);
        } catch (SQLException ex) {
            Logger.getLogger(UpdateSetting.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(null, "Data "+ pesan +" diperbarui!", pesan, JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public void init() {
        namaV.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Bus");
        hargaV.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "10.000");
        slotV.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "3");
    }
    
    public void fieldUpdate(){
         try {
            Connection c = Koneksi.getKoneksi();
            String sql = "SELECT nama, harga, slot FROM vehicle WHERE id = ?";
            PreparedStatement preparedStatement = c.prepareStatement(sql);
            preparedStatement.setInt(1, id);

            ResultSet rs = preparedStatement.executeQuery();

            if (rs.next()) {
                String nama = rs.getString("nama");
                namaV.setText(nama); 
                
                String harga = rs.getString("harga");
                hargaV.setText(harga); 
                
                String slot = rs.getString("slot");
                slotV.setText(slot); 
            }
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField hargaV;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField namaV;
    private javax.swing.JTextField slotV;
    // End of variables declaration//GEN-END:variables

}
